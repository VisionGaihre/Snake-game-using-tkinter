from tkinter import *
import random
GAME_WIDTH=1000
GAME_HEIGHT=500
SPEED=120
SPACESIZE=25
BODYPARTS=3
SNAKE_COLOUR="#7d3755"
FOOD_COLOUR="#fc0505"
BACKGROUND_COLOUR="#14c48f"
class Snake:
    def __init__(self):
        self.body_size=BODYPARTS
        self.coordinates=[]
        self.squares=[]

        for i in range(0,BODYPARTS):
            self.coordinates.append([0,0])
        for x,y in self.coordinates:
            square=canvas.create_rectangle(x,y,x+SPACESIZE,y+SPACESIZE,fill=SNAKE_COLOUR,tag="Snake")
            self.squares.append(square)
class Food:
    def __init__(self):

        x=random.randint(0,(GAME_WIDTH/SPACESIZE)-1)*SPACESIZE
        y=random.randint(0,(GAME_HEIGHT/SPACESIZE)-1)*SPACESIZE

        self.coordinates=[x,y]

        canvas.create_oval(x,y,x+SPACESIZE,y+SPACESIZE,fill=FOOD_COLOUR,tag="food")

def nextturn(snake,food):
    
    x,y=snake.coordinates[0]
    if direction=='up':
        y-=SPACESIZE
    elif direction=='down':
        y+=SPACESIZE
    elif direction=='left':
        x-=SPACESIZE
    elif direction=='right':
        x+=SPACESIZE
    snake.coordinates.insert(0,(x,y))
    square=canvas.create_rectangle(x,y,x+SPACESIZE,y+SPACESIZE,fill=SNAKE_COLOUR)
    snake.squares.insert(0,square)

    if x==food.coordinates[0] and y==food.coordinates[1]:
        global score
        global SPEED
        score+=1  
        if (score % 5)==0:
            SPEED -= 10         
        label.config(text="Score:{}".format(score))
        canvas.delete("food")
        food=Food()
    else:
        del snake.coordinates[-1]
        canvas.delete(snake.squares[-1])
        del snake.squares[-1]

    if check_collison(snake):
        gameover()
    
    else:
        window.after(SPEED,nextturn,snake,food)
def change_directions(newdir):
    global direction
    if newdir=='left':
        if direction!='right':
            direction=newdir
    elif newdir=='right':
        if direction!='right':
            direction=newdir
    elif newdir=='up':
        if direction!='up':
            direction=newdir
    elif newdir=='down':
        if direction!='down':
            direction=newdir
def check_collison(snake) :
    x,y=snake.coordinates[0]
    if x<0 or x>=GAME_WIDTH:
        return True
    elif y<0 or y>=GAME_HEIGHT:
        print("GAME OVER")
        return True
    for body_part in snake.coordinates[1:]:
        if x == body_part[0]and y ==body_part[1]:
            print("gameover")
            return True
        
    return False
def gameover(): 
    canvas.delete(ALL)
    canvas.create_text(canvas.winfo_width()/2,canvas.winfo_height()/2,font=('consolas')
                       ,text="GAME OVER",fill="red",tag="gameOver")
window= Tk()
window.title("Snake game")

score=0
direction='down'

label=Label(window,text="score:{}".format(score),font=('consolas',40))
label.pack()

canvas=Canvas(window,bg=BACKGROUND_COLOUR,height=GAME_HEIGHT,width=GAME_WIDTH)
canvas.pack()

window.update()

window_width=window.winfo_width()
window_height=window.winfo_height()
screen_width=window.winfo_screenwidth()
screen_height=window.winfo_screenheight()

x=int((screen_width/2)-(window_width/2))
y=int ((screen_height/2)-(window_height/2))

window.geometry(f"{window_width}x{window_height}+{x}+{y}")

window.bind('<Left>',lambda event: change_directions('left'))
window.bind('<Right>',lambda event: change_directions('right'))
window.bind('<Up>',lambda event: change_directions('up'))
window.bind('<Down>',lambda event: change_directions('down'))
snake=Snake()
food=Food()
nextturn(snake,food)
window.mainloop()
